1.you are a data analyst working for an e-commerce company.
The company has provided  you with a dataset containing information about customer orders. 
The dataset includes  columns such as OrderID, CustomerID, ProductID, Quantity, and TotalPrice. 
Your task is to  use Panda’s data frames to analyze and derive insights from the dataset. 
PROGRAM 
import pandas as pd

# Load the dataset
df = pd.read_csv('orders.csv')

# Explore the Data
print(df.head())
print(df.describe())
print(df.isnull().sum())

# Analyze Order Quantity and Total Price
total_quantity = df['Quantity'].sum()
total_revenue = df['TotalPrice'].sum()
average_quantity_per_order = df.groupby('OrderID')['Quantity'].mean().mean()
average_total_price_per_order = df.groupby('OrderID')['TotalPrice'].mean().mean()

print(f"Total Quantity Sold: {total_quantity}")
print(f"Total Revenue Generated: ${total_revenue}")
print(f"Average Quantity per Order: {average_quantity_per_order}")
print(f"Average Total Price per Order: ${average_total_price_per_order}")

# Customer Analysis
num_unique_customers = df['CustomerID'].nunique()
top_customers = df.groupby('CustomerID')['TotalPrice'].sum().sort_values(ascending=False).head(5)

print(f"Number of Unique Customers: {num_unique_customers}")
print("Top 5 Customers by Total Spending:")
print(top_customers)

# Product Analysis
best_selling_products = df.groupby('ProductID')['Quantity'].sum().sort_values(ascending=False).head(5)

print("Top 5 Best-Selling Products by Quantity:")
print(best_selling_products)




2. You are a data scientist working for a medical research institute. 
The institute is  conducting a study to understand the relationship between smoking habits and the incidence  of lung cancer among a group of individuals.
As part of your analysis, you are tasked with  calculating the correlation coefficient between smoking and lung cancer rates and creating a  scatter plot to visualize the data. 

PROGRAM
import pandas as pd
import matplotlib.pyplot as plt

# Assuming you have a dataset with columns 'Smoking' and 'LungCancerRate'
# Load the dataset (replace 'data.csv' with your actual dataset file)
df = pd.read_csv('data.csv')

# Calculate the correlation coefficient
correlation_coefficient = df['Smoking'].corr(df['LungCancerRate'])

# Create a scatter plot
plt.scatter(df['Smoking'], df['LungCancerRate'])
plt.title('Relationship between Smoking and Lung Cancer Rates')
plt.xlabel('Smoking Habits')
plt.ylabel('Lung Cancer Rate')
plt.show()

# Display the correlation coefficient
print(f"Correlation Coefficient: {correlation_coefficient}")


3. You work as a data analyst for a large e-commerce company that sells a variety of  products online.
Your company has collected sales data over the past year and wants to  analyze and visualize this data to gain insights into sales trends, product performance, and  customer behavior.
To understand which product categories are most popular, create line,  scatter and bar plot that displays the distribution of sales across different product categories.
Each plot has to represents a category, and the height of the bar indicates the total sales  amount for that category. 

PROGRAM
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming you have a dataset with columns 'ProductCategory' and 'SalesAmount'
# Load the dataset (replace 'sales_data.csv' with your actual dataset file)
df = pd.read_csv('sales_data.csv')

# Create a line plot for sales trends across different product categories
plt.figure(figsize=(10, 6))
sns.lineplot(x='ProductCategory', y='SalesAmount', data=df, ci=None)
plt.title('Sales Trends Across Product Categories')
plt.xlabel('Product Category')
plt.ylabel('Total Sales Amount')
plt.xticks(rotation=45)
plt.show()

# Create a scatter plot for product performance
plt.figure(figsize=(10, 6))
sns.scatterplot(x='ProductCategory', y='SalesAmount', data=df)
plt.title('Product Performance Across Categories')
plt.xlabel('Product Category')
plt.ylabel('Total Sales Amount')
plt.xticks(rotation=45)
plt.show()

# Create a bar plot for total sales amount by product category
plt.figure(figsize=(10, 6))
sns.barplot(x='ProductCategory', y='SalesAmount', data=df, ci=None)
plt.title('Total Sales Amount by Product Category')
plt.xlabel('Product Category')
plt.ylabel('Total Sales Amount')
plt.xticks(rotation=45)
plt.show()


4. Scenario: You are a data analyst working for an e-commerce company. 
The company has  provided you with a dataset containing information about customer orders. 
The dataset  includes columns such as OrderID, CustomerID, ProductID, Quantity, and TotalPrice. 
Your  task is to use Pandas data frames to analyze and derive insights from the dataset. 

PROGRAM
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
df = pd.read_csv('orders_dataset.csv')  # Replace with your actual dataset filename or path

# Display the first few rows of the dataset
print("First few rows of the dataset:")
print(df.head())

# Check basic statistics of numerical columns
print("\nBasic statistics of numerical columns:")
print(df.describe())

# Check for missing values
print("\nMissing values in the dataset:")
print(df.isnull().sum())

# Customer Analysis
# Number of unique customers
num_unique_customers = df['CustomerID'].nunique()
print("\nNumber of Unique Customers:", num_unique_customers)

# Total spending per customer
total_spending_per_customer = df.groupby('CustomerID')['TotalPrice'].sum()
print("\nTotal Spending per Customer:")
print(total_spending_per_customer.head())

# Product Analysis
# Top 5 best-selling products by quantity
best_selling_products = df.groupby('ProductID')['Quantity'].sum().sort_values(ascending=False).head(5)
print("\nTop 5 Best-Selling Products by Quantity:")
print(best_selling_products)

# Order Analysis
# Average quantity and total price per order
average_quantity_per_order = df.groupby('OrderID')['Quantity'].mean().mean()
average_total_price_per_order = df.groupby('OrderID')['TotalPrice'].mean().mean()
print("\nAverage Quantity per Order:", average_quantity_per_order)
print("Average Total Price per Order:", average_total_price_per_order)

# Visualizations (Optional)
# Create a bar plot for total spending per customer
plt.figure(figsize=(10, 6))
sns.barplot(x=total_spending_per_customer.index, y=total_spending_per_customer.values)
plt.title('Total Spending per Customer')
plt.xlabel('Customer ID')
plt.ylabel('Total Spending')
plt.show()




5. Scenario: You are working on a data analysis project that involves analyzing the monthly  temperature and rainfall data for a city. 
You have a dataset containing the monthly  temperature and rainfall values for each month of a year.
Your task is to develop a Python  program that generates line plots and scatter plots to visualize the temperature and rainfall  data. 

PROGRAM
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming you have a dataset with columns 'Month', 'Temperature', and 'Rainfall'
# Load the dataset (replace 'weather_data.csv' with your actual dataset file)
df = pd.read_csv('weather_data.csv')

# Line plot for Monthly Temperature
plt.figure(figsize=(12, 6))
sns.lineplot(x='Month', y='Temperature', data=df, marker='o', color='blue')
plt.title('Monthly Temperature Variation')
plt.xlabel('Month')
plt.ylabel('Temperature (°C)')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

# Scatter plot for Monthly Rainfall
plt.figure(figsize=(12, 6))
sns.scatterplot(x='Month', y='Rainfall', data=df, color='green')
plt.title('Monthly Rainfall Distribution')
plt.xlabel('Month')
plt.ylabel('Rainfall (mm)')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()
